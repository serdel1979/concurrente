chan pedidoC(int), pedidoN(int), pedidoNC (int), devoC(int), devoN(int), devoNC(int)
array of chan colores[c] (int)
array of chan negros[n] (int)
array of chan nc[a] (int)

process niñosC[i:1..c]{
int lapiz
while true{
	send pedidoC (i);
	recieve colores[i] (lapiz)
	delay(600);
	send devoC (lapiz);
}
}

process niñosN[i:1..n]{
int lapiz
while true{
	send pedidoN (i);
	recieve negros[i] (lapiz)
	delay(600);
	send devoN (lapiz);
}
}

process niñosNC[i:1..a]{
int lapiz
while true{
	send pedidoNC(i);
	recieve nc[i] (lapiz)
	delay(600);
	send devoNC (lapiz);
}
}

process abuela(){
int cantC=15, cantN=10, idc,idn, idnc;
 while true{
	if  (cantC>0)->{
		recieve pedidoC (idc);
		cantC=cantC-1;
		send colores[idc] (cantC)};
	[]  (cantN>0)->{
		recieve pedidoN (idn)
		cantN=cantN-1;
		send negros[idn] (cantN)};
	[]  ((cantN>0)and(empty pedidoN))->{	
		    recieve pedidoNC (idnc);
	        cantN=cantN-1; 
			send nc[idnc] (cantN)};
	[]	((cantC > 0)and (empty pedidoC) ->{
			recieve pedidoNC (idnc);
			cantC=cantC-1;
			send nc[idnc] (cantC);
		}
	[]  (not empty(deovoC))->{recieve devoC (idc);  cantc = cantc +1};
	[]  (not empty(devoN)) ->{recieve devoN (idn);	cantN = cantn +1};
	fi;
 }
}

